{"version":3,"sources":["contextFile.ts","components/home.tsx","components/poll.tsx","components/new.tsx","components/signup.tsx","components/login.tsx","routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserContext","createContext","Home","auth","useContext","useState","polls","setPolls","useEffect","a","fetch","res","json","data","console","log","user","as","size","length","templateColumns","gap","map","poll","id","question","poll_count","to","background","padding","borderRadius","fontWeight","height","style","textDecoration","Poll","navigate","useNavigate","NewPoll","Signup","Login","username","setUsername","password","setPassword","loginFailed","setLoginFailed","setAuth","userCredentials","method","body","JSON","stringify","headers","credentials","result","success","replace","w","direction","align","my","placeholder","onChange","e","target","value","type","mr","onClick","ml","routes","path","element","App","maxW","justifyContent","marginRight","colorScheme","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57aaa90d.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const UserContext = createContext<any>(null);\n","import { Box, Flex, Grid, Heading } from '@chakra-ui/react';\nimport { FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../contextFile';\n\ninterface HomeProps {\n\n}\n\ninterface IPoll {\n    id: number;\n    question: string;\n    poll_count: number;\n}\n\nconst Home: FunctionComponent<HomeProps> = () => {\n\n    const { auth } = useContext(UserContext);\n    const [polls, setPolls] = useState<IPoll[]>([]);\n\n    useEffect(() => {\n        (async () => {\n            const res = await fetch('https://tva-backend.herokuapp.com/polls');\n            const data = await res.json();\n            console.log(data);\n            setPolls(data);\n        })();\n    }, []);\n\n    const displayPolls = () => {\n        return polls.map(poll => {\n            const { id, question, poll_count } = poll;\n\n            return (\n                <Link to={`/poll/${id}`}>\n                    <Box\n                        background=\"#3e5177\"\n                        padding={3}\n                        borderRadius={5}\n                        fontWeight=\"bold\"\n                    >\n                        <p>{question}</p>\n                        <p>{poll_count}</p>\n                    </Box>\n                </Link>\n            )\n        })\n    }\n\n    console.log(auth)\n\n    return (\n        <>\n            {auth.user ? (\n                <Box>\n                    <Heading as=\"h2\" size=\"large\">Welcome {auth.user}</Heading>\n                    <Box>\n                        {polls.length ?\n                            <Grid\n                                templateColumns=\"repeat(auto-fill, minmax(300px, 1fr))\"\n                                gap=\"5\"\n                            >\n                                {displayPolls()}\n                            </Grid>\n                            :\n                            <Flex height=\"65vh\">\n                                <Heading as=\"h2\" size=\"large\">No polls</Heading>\n                            </Flex>\n                        }\n                    </Box>\n                </Box>\n            ) : (\n                <Box>\n                    <Heading as=\"h2\" size=\"large\">You must be logged in. Please <Link style={{ textDecoration: 'underline' }} to=\"/login\">Log in</Link>.</Heading>\n                </Box>\n            )}\n        </>\n    );\n}\n\nexport default Home;","import { Box, Heading } from '@chakra-ui/react';\nimport { FunctionComponent, useContext, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../contextFile';\n\ninterface PollProps {\n    \n}\n\n/**\n * \n * Display the poll if the user hasn't voted else show the poll results\n */\n \nconst Poll: FunctionComponent<PollProps> = () => {\n    const { auth } = useContext(UserContext);\n    let navigate = useNavigate();\n    \n    useEffect(() => {\n        if(!auth.user) {\n            navigate('/login')\n        }\n    });\n    \n    return ( \n        <Box>\n            <Heading as=\"h2\" size=\"large\">View Poll</Heading>\n        </Box>\n     );\n}\n \nexport default Poll;","import { Box, Heading } from '@chakra-ui/react';\nimport { FunctionComponent, useContext, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../contextFile';\n\ninterface NewPollProps {\n    \n}\n \nconst NewPoll: FunctionComponent<NewPollProps> = () => {\n    const { auth } = useContext(UserContext);\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        if(!auth.user) {\n            navigate('/login')\n        }\n    });\n\n    return ( \n        <Box>\n            <Heading as=\"h2\" size=\"large\">NewPoll</Heading>\n        </Box>\n     );\n}\n \nexport default NewPoll;","import { Box, Heading } from '@chakra-ui/react';\nimport { FunctionComponent } from \"react\";\n\ninterface SignupProps {\n    \n}\n \nconst Signup: FunctionComponent<SignupProps> = () => {\n    return ( \n        <Box>\n            <Heading as=\"h2\" size=\"large\">Signup</Heading>\n        </Box>\n     );\n}\n \nexport default Signup;","import { Flex, Heading, Input, Button, Text } from \"@chakra-ui/react\";\nimport { FunctionComponent, useState, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { UserContext } from \"../contextFile\";\n\ninterface LoginProps { }\n\nconst Login: FunctionComponent<LoginProps> = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginFailed, setLoginFailed] = useState(false);\n\n  const { auth, setAuth } = useContext(UserContext);\n  let navigate = useNavigate();\n\n  function handleUsername(e: any) {\n    setUsername(e.target.value);\n  }\n  function handlePassword(e: any) {\n    setPassword(e.target.value);\n  }\n\n  async function submitPassword() {\n    const userCredentials = {\n      username,\n      password,\n    };\n\n    const result = await fetch(\"https://tva-backend.herokuapp.com/login\", {\n      method: \"POST\",\n      body: JSON.stringify(userCredentials),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: 'include'\n    });\n    const data = await result.json();\n\n    if (data.success) {\n      // localStorage.setItem(\n      //   \"user\",\n      //   JSON.stringify({\n      //     loggedIn: true,\n      //     userId: data.userId,\n      //   })\n      // );\n      setAuth({ user: userCredentials.username });\n      navigate(\"/\", { replace: true });\n    } else {\n      setLoginFailed(true);\n    }\n  }\n\n  return (\n    <Flex w=\"100%\" direction=\"column\" align=\"center\">\n      <Heading as=\"h2\" size=\"large\">\n        Login\n      </Heading>\n\n      <Flex w=\"50%\" direction=\"column\" align=\"center\">\n        <Input\n          my=\"1rem\"\n          placeholder=\"Username\"\n          size=\"lg\"\n          onChange={handleUsername}\n        />\n        <Input\n          my=\"1rem\"\n          placeholder=\"Password\"\n          size=\"lg\"\n          type=\"password\"\n          onChange={handlePassword}\n        />\n        <Flex align=\"center\">\n          <Button\n            my=\"1rem\"\n            mr=\"1rem\"\n            w=\"50%\"\n            type=\"submit\"\n            onClick={submitPassword}\n          >\n            Log In\n          </Button>\n          <Text>or</Text>\n          <Button ml=\"1rem\">\n            <Link to=\"/signup\">signup</Link>\n          </Button>\n        </Flex>\n        {loginFailed && <Text>Login Failed</Text>}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Login;\n","import { Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport Poll from \"./components/poll\";\nimport NewPoll from \"./components/new\";\nimport Signup from \"./components/signup\";\nimport Login from \"./components/login\";\n\nconst routes = (\n  <Routes>\n    <Route path=\"/\" element={<Home />} />\n    <Route path=\"/poll/:id\" element={<Poll />} />\n    <Route path=\"/new\" element={<NewPoll />} />\n    <Route path=\"/signup\" element={<Signup />} />\n    <Route path=\"/login\" element={<Login />} />\n  </Routes>\n);\n\nexport default routes;\n","import { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Container, Flex, Heading } from \"@chakra-ui/react\";\nimport routes from \"./routes\";\nimport { UserContext } from \"./contextFile\";\n\nfunction App() {\n  const [auth, setAuth] = useState({ user: null });\n  let navigate = useNavigate();\n\n  /**\n   * Make a request to /auth endpoint to check if the user is authenticated\n   */\n  useEffect(() => {\n    // /auth route will return the authenticated user's name \n    (async () => {\n      const res = await fetch('https://tva-backend.herokuapp.com/auth', {\n        credentials: 'include'\n      });\n      const user = await res.json();\n      setAuth(user);\n    })();\n  }, []);\n\n  const handleSignout = () => {\n    (async () => {\n      const res = await fetch('https://tva-backend.herokuapp.com/signout', {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify({})\n      });\n      const user = await res.json();\n      setAuth({ user: null });\n    })();\n    navigate('/');\n  }\n\n  console.log(auth.user)\n\n  return (\n    <Container maxW=\"container.xl\">\n      <nav>\n        <Flex\n          justifyContent=\"space-between\"\n        >\n          <Box>Voting App</Box>\n          <Box>\n            {auth.user ? (\n              <>\n                <Link to=\"/new\" style={{marginRight: 10}}>\n                  <Button colorScheme=\"linkedin\" size=\"xs\">new poll</Button>\n                </Link>\n                <Button\n                  size=\"xs\"\n                  colorScheme=\"whatsapp\"\n                  onClick={handleSignout}\n                >sign out</Button>\n              </>\n            ) : (\n              <ul>\n                <li><Link to=\"/signup\">signup</Link></li>\n                <li><Link to=\"/login\">login</Link></li>\n              </ul>\n            )}\n          </Box>\n        </Flex>\n      </nav>\n      <UserContext.Provider value={{ auth, setAuth }}>\n        <Box>{routes}</Box>\n      </UserContext.Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>,\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}